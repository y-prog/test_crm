name: Run All Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # allows manual triggering of the workflow

jobs:
  test:
    runs-on: windows-latest  # Use a Windows runner for this job
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the code from the repo to the runner

    - name: Set up .NET
      uses: actions/setup-dotnet@v3  # Set up the .NET environment
      with:
        dotnet-version: '9.0.x'  # Specify the .NET version (update if necessary)

    - name: Restore dependencies
      run: |
        dotnet restore crm-site/tests/Server.Tests/Server.Tests.csproj  # Restore NuGet packages for the test project

    - name: Build the project
      run: |
        dotnet build crm-site/tests/Server.Tests/Server.Tests.csproj --configuration Release  # Build the test project

    - name: Run tests
      run: |
        dotnet test crm-site/tests/Server.Tests/Server.Tests.csproj --verbosity normal  # Run the unit tests without --no-build

    - name: Start API server
  run: |
    $env:ASPNETCORE_URLS = "http://localhost:3000"
    dotnet run --project crm-site/server/server.csproj &
    Start-Sleep -Seconds 10
  shell: pwsh


    - name: Run Postman tests
      run: |
        npm install -g newman  # Install Newman (Postman CLI)
        newman run crm-site/postman_test/linustest.postman_collection.json  # Run the Postman collection using Newman

    - name: Run Playwright tests
      run: |
        npm ci  # Install dependencies (ensure the correct Node.js modules are installed)
        npx playwright install  # Install Playwright dependencies
        npx playwright test  # Run Playwright tests
