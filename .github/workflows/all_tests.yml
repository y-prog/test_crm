name: Run All Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # allows manual triggering of the workflow

jobs:
  test:
    runs-on: windows-latest  # Use a Windows runner for this job
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the code from the repo to the runner

    - name: Set up .NET
      uses: actions/setup-dotnet@v3  # Set up the .NET environment
      with:
        dotnet-version: '9.0.x'  # Specify the .NET version (update if necessary)

    - name: Restore dependencies
      run: |
        dotnet restore crm-site/tests/Server.Tests/Server.Tests.csproj  # Restore NuGet packages for the test project

    - name: Build the project
      run: |
        dotnet build crm-site/tests/Server.Tests/Server.Tests.csproj --configuration Release  # Build the test project

    - name: Run tests
      run: |
        dotnet test crm-site/tests/Server.Tests/Server.Tests.csproj --verbosity normal  # Run the unit tests without --no-build

    - name: Start API server
      shell: pwsh
      run: |
        $env:ASPNETCORE_URLS = "http://localhost:3000"
        dotnet run --project crm-site/server/server.csproj > server.log 2>&1 &
        Start-Sleep -Seconds 10


    - name: Wait for server to be ready
      shell: pwsh
      run: |
        for ($i = 0; $i -lt 10; $i++) {
          try {
            $response = Invoke-WebRequest -Uri http://localhost:3000/api/login -UseBasicParsing
            if ($response.StatusCode -eq 200) {
              Write-Host "‚úÖ Server is up!"
              break
            }
          } catch {
            Write-Host "Waiting for server... ($i)"
            Start-Sleep -Seconds 3
          }
          if ($i -eq 9) {
            throw "‚ùå Server did not start in time."
          }
        }

    - name: Dump server logs if failed
      if: failure()
      shell: pwsh
      run: |
          Write-Host "üìÑ Server log output:"
          Get-Content server.log | ForEach-Object { Write-Host $_ }


    - name: Run Postman tests
      shell: pwsh
      run: |
        npm install -g newman
        newman run crm-site/postman_test/linustest.postman_collection.json

    - name: Run Playwright tests
      shell: pwsh
      run: |
          npm ci
          npx playwright install
          npx playwright test
